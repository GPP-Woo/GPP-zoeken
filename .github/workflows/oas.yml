# Run quality control on the (generated) Open API specification.
#
# The OAS must:
# * not be outdated w/r to the code from which it is generated
# * not have any linting errors
# * be valid input to generate a Postman collection
# * be valid input to generate SDKs in commonly used languages/frameworks
#
# When dealing with multiple versions, you can adapt this workflow to run a matrix and
# pass arguments down that way, and/or use a parent workflow to call this workflow for
# each matrix item. See https://docs.github.com/en/actions/sharing-automations/reusing-workflows

name: OpenAPI specification checks

on:
  push:
    branches:
      - main
      - stable/*
  pull_request:
  workflow_dispatch:

jobs:
  generate-and-compare:
    name: Generate OAS and check staleness
    runs-on: ubuntu-latest

    outputs:
      schema-path: ${{ steps.generate.outputs.schema-path }}

    steps:
      - name: Generate
        uses: maykinmedia/open-api-workflows/actions/oas-generate@refactor/reusable-actions
        id: generate
        with:
          python-version: '3.12'
          command: ./bin/generate_api_schema.sh
          artifact-name: gpp-zoeken-oas
          schema-path: src/woo_search/api/openapi.yaml
        env:
          DJANGO_SETTINGS_MODULE: woo_search.conf.ci

      - name: Compare
        uses: maykinmedia/open-api-workflows/actions/oas-compare@refactor/reusable-actions
        with:
          artifact-name: gpp-zoeken-oas
          schema-path: src/woo_search/api/openapi.yaml

  lint:
    name: Lint OAS
    runs-on: ubuntu-latest
    needs:
      - generate-and-compare  # no point in linting something that's not up to date

    steps:
      - uses: actions/checkout@v4
      - name: Lint
        uses: maykinmedia/open-api-workflows/actions/oas-lint@refactor/reusable-actions
        with:
          schema-path: ${{ needs.generate-and-compare.outputs.schema-path }}
          node-version-file: '.nvmrc'
          spectral-version: '^6.15.0'

  postman-collection:
    name: Generate Postman collection
    runs-on: ubuntu-latest
    needs:
      - generate-and-compare  # no point in linting something that's not up to date

    steps:
      - uses: actions/checkout@v4
      - name: Generate collection
        uses: maykinmedia/open-api-workflows/actions/oas-to-postman@refactor/reusable-actions
        with:
          schema-path: ${{ needs.generate-and-compare.outputs.schema-path }}
          node-version-file: '.nvmrc'
          openapi-to-postman-version: '^5.0.0'
          artifact-name: gpp-zoeken-postman-collection

  # sdks:
  #   name: Generate SDKs from API schema
  #   runs-on: ubuntu-latest
  #   needs:
  #     - generate-and-compare  # no point in linting something that's not up to date

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Download generated OAS
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: gpp-zoeken-oas
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'
  #         cache: npm

  #     - name: Install dependencies
  #       run: npm install -g @openapitools/openapi-generator-cli

  #     - name: Validate schema
  #       run: |
  #         openapi-generator-cli \
  #           validate -i openapi.yaml

  #     - name: Generate Java client
  #       run: |
  #         openapi-generator-cli \
  #           generate \
  #           -i openapi.yaml \
  #           --global-property=modelTests=false,apiTests=false,modelDocs=false,apiDocs=false \
  #           -o ./sdks/java \
  #           -g java \
  #           --additional-properties=dateLibrary=java8,java8=true,optionalProjectFile=false,optionalAssemblyInfo=false

  #     - name: Generate .NET client
  #       run: |
  #         openapi-generator-cli \
  #           generate \
  #           -i openapi.yaml \
  #           --global-property=modelTests=false,apiTests=false,modelDocs=false,apiDocs=false \
  #           -o ./sdks/net \
  #           -g csharp \
  #           --additional-properties=optionalProjectFile=false,optionalAssemblyInfo=false

  #     - name: Generate Python client
  #       run: |
  #         openapi-generator-cli \
  #           generate \
  #           -i openapi.yaml \
  #           --global-property=modelTests=false,apiTests=false,modelDocs=false,apiDocs=false \
  #           -o ./sdks/python \
  #           -g python \
  #           --additional-properties=optionalProjectFile=false,optionalAssemblyInfo=false+
