[project]
requires-python = "3.12"

[tool.uv.pip]
emit-index-url = false

[tool.bumpversion]
current_version = "1.0.0-rc.0"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash separator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)\\.      # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{pre_l}.{pre_n}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "{new_version}"
tag_message = ":arrow_up: Bump version to {new_version} and update changelog"
allow_dirty = false
commit = false
message = ":arrow_up: Bump version to {new_version} and update changelog"
commit_args = ""
setup_hooks = []
pre_commit_hooks = [
    "npm i",  # ensure that package-lock.json is updated
]
post_commit_hooks = []

[tool.bumpversion.parts.pre_l]
values = ["dev", "beta", "rc", "final"]
optional_value = "final"

[[tool.bumpversion.files]]
filename = "src/woo_search/__init__.py"

[[tool.bumpversion.files]]
filename = "src/woo_search/conf/locale/nl/LC_MESSAGES/django.po"

[[tool.bumpversion.files]]
filename = "README.rst"
search = ":Version: {current_version}"
replace = ":Version: {new_version}"

[[tool.bumpversion.files]]
filename = "README.EN.rst"
search = ":Version: {current_version}"
replace = ":Version: {new_version}"

[[tool.bumpversion.files]]
filename = "package.json"
search = "    \"version\": \"{current_version}\""
replace = "    \"version\": \"{new_version}\""
