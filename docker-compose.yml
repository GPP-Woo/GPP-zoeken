#
# Docker-compose for woo-search stack.
#
# DISCLAIMER: THIS IS FOR DEVELOPMENT PURPOSES ONLY AND NOT SUITABLE FOR PRODUCTION.
#
# You can use this docker-compose to spin up a local stack for demo/try-out
# purposes, or to get some insight in the various components involved (e.g. to build
# your Helm charts from). Note that various environment variables are UNSAFE and merely
# specified so that you can get up and running with the least amount of friction.
#
# Before deploying to production, please review the environment configuration reference:
# https://gpp-zoeken.readthedocs.io/en/latest/installation/config.html

#
# TODO: add registration-component to the stack to actually index stuff
#

services:
  db:
    image: postgres:${PG_VERSION:-16}
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - db:/var/lib/postgresql/data

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

  # Based on https://www.elastic.co/guide/en/elasticsearch/reference/current/run-elasticsearch-locally.html
  # Log in with `elastic` / `insecure-elastic` (or whatever you set the envvar `ES_PASSWORD` to).
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION:-8.17.1}
    environment:
      - discovery.type=single-node
      - cluster.name=gpp-search-dev
      - node.name=es01
      - node.roles=master,data
      - ingest.geoip.downloader.enabled=false
      - ELASTIC_PASSWORD=${ES_PASSWORD:-insecure-elastic}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      # - xpack.license.self_generated.type=trial
      - xpack.ml.use_auto_machine_memory_percent=true
      - ES_JAVA_OPTS=-Xms${ES_HEAP_INIT:-128m} -Xmx${ES_HEAP_MAX:-2g}
      - cluster.routing.allocation.disk.watermark.low=${ES_DISK_SPACE_REQUIRED:-1gb}
      - cluster.routing.allocation.disk.watermark.high=${ES_DISK_SPACE_REQUIRED:-1gb}
      - cluster.routing.allocation.disk.watermark.flood_stage=${ES_DISK_SPACE_REQUIRED:-1gb}
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --output /dev/null --silent --head --fail -u elastic:${ES_PASSWORD:-insecure-elastic} http://es:9200",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 9200:9200
      # - "9300:9300"

  web:
    build: &web_build
      context: .
      args:
        RELEASE: ${RELEASE:-latest}
    image: maykinmedia/woo-search:${RELEASE:-latest}
    environment: &web_env
      - DJANGO_SETTINGS_MODULE=woo_search.conf.docker
      - SECRET_KEY=${SECRET_KEY:-django-insecure-fgggi4*bl2wdg&@0&)t7ewy5-2!b3l4lhx4_+^zpw%x2i28v8}
      - DB_NAME=woo_search
      - DB_USER=woo_search
      - DB_HOST=db
      - CACHE_DEFAULT=redis:6379/0
      - CACHE_AXES=redis:6379/0
      - ODS_SUPERUSER_USERNAME=admin
      - ODS_SUPERUSER_EMAIL=admin@host.docker.internal
      - DISABLE_2FA=true
      - DJANGO_SUPERUSER_PASSWORD=admin
      - ALLOWED_HOSTS=*
      - INIT_ES_INDICES=true
      - ELASTICSEARCH_HOST=http://es:9200/
      - ELASTICSEARCH_USER=elastic
      - ELASTICSEARCH_PASSWORD=insecure-elastic
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_LOGLEVEL=DEBUG
      # Environment labeling
      - SHOW_ENVIRONMENT=yes
      - ENVIRONMENT_LABEL=docker-compose
      - ENVIRONMENT_BACKGROUND_COLOR=#1d63ed
      - ENVIRONMENT_FOREGROUND_COLOR=white
    volumes: &web_volumes
      - ./docker/fixtures/:/app/fixtures
      - media:/app/media
      - log:/app/log
    extra_hosts: &web_extra_hosts
      - "host.docker.internal:host-gateway"
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis
      - es

  celery:
    build: *web_build
    image: ghcr.io/gpp-woo/gpp-zoeken:${RELEASE:-latest}
    environment: *web_env
    command: /celery_worker.sh
    volumes: *web_volumes
    extra_hosts: *web_extra_hosts
    depends_on:
      - db
      - redis

  celery-flower:
    build: *web_build
    image: ghcr.io/gpp-woo/gpp-zoeken:${RELEASE:-latest}
    environment: *web_env
    command: /celery_flower.sh
    ports:
      - 5555:5555
    depends_on:
      - redis
      - celery

volumes:
  db:
  redis-data:
  log:
  media:
  es-data:
