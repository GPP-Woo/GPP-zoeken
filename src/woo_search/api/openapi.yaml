openapi: 3.0.3
info:
  title: WOO Search
  version: 0.1.0
  description: |2

    The WOO Search API provides an interface to the underlying Elastic Search index.

    Through this API, it's possible to add published documents to the API, or to
    schedule removal of a publication in case it's being retracted. When a supported
    file type is provided, the content of the document itself will also be indexed.

    **Authentication**

    TODO - not implemented yet!

    This API makes use of API Key authentication. All requests must have the
    `Authorization: token <token-value>` HTTP header, where `<token-value>` is
    replaced with the actual API key. API keys are managed in the admin interface,
    and you obtain one by contacting the administrator(s).

    **Audit logging**

    TODO - not implemented yet!

    Audit logging is done at the request level. Clients must send the respective
    HTTP request headers, and the values in those headers will be recorded in the
    audit logs.
  contact:
    url: https://github.com/GPP-Woo/GPP-zoeken
    email: support@maykinmedia.nl
  license:
    name: EUPL
    url: https://github.com/GPP-Woo/GPP-zoeken/blob/main/LICENSE.md
paths:
  /api/v1/documenten:
    post:
      operationId: documentenCreate
      description: Index the received document metadata from the Register API in Elasticsearch.
      summary: Index document metadata.
      tags:
      - index
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - tokenAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CeleryTaskId'
          description: ''
  /api/v1/publicaties:
    post:
      operationId: publicatiesCreate
      description: Index the received publication metadata from the Register API in
        Elasticsearch.
      summary: Index publication metadata.
      tags:
      - index
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
        required: true
      security:
      - tokenAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CeleryTaskId'
          description: ''
  /api/v1/search:
    post:
      operationId: searchCreate
      description: Search the publication and document records.
      summary: Zoeken
      tags:
      - index
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResponse'
          description: ''
components:
  schemas:
    CeleryTaskId:
      type: object
      properties:
        taskId:
          type: string
          format: uuid
      required:
      - taskId
    Document:
      type: object
      properties:
        uuid:
          type: string
        publicatie:
          type: string
          description: The unique identifier of the publication.
        publisher:
          allOf:
          - $ref: '#/components/schemas/Publisher'
          description: The organisation which publishes the publication of this document.
        identifier:
          type: string
          default: ''
          description: The (primary) unique identifier.
          maxLength: 255
        officieleTitel:
          type: string
          maxLength: 255
        verkorteTitel:
          type: string
          default: ''
          maxLength: 255
        omschrijving:
          type: string
          default: ''
        creatiedatum:
          type: string
          format: date
          description: Date when the (physical) document came into existence. Not
            to be confused with the registration timestamp of the document - the creation
            date is typically *before* the registration date.
        registratiedatum:
          type: string
          format: date-time
          description: System timestamp reflecting when the document was registered
            in the GPP-Publicatiebank. Not to be confused with the creation date of
            the document, which is usually *before* the registration date.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          description: System timestamp reflecting when the document was last modified
            in the GPP-Publicatiebank.
      required:
      - creatiedatum
      - laatstGewijzigdDatum
      - officieleTitel
      - publicatie
      - publisher
      - registratiedatum
      - uuid
    DocumentPolymorphic:
      type: object
      properties:
        record:
          allOf:
          - $ref: '#/components/schemas/Document'
          readOnly: true
      required:
      - record
    InformatieCategorie:
      type: object
      properties:
        uuid:
          type: string
        naam:
          type: string
          maxLength: 255
      required:
      - naam
      - uuid
    Publication:
      type: object
      properties:
        uuid:
          type: string
        publisher:
          allOf:
          - $ref: '#/components/schemas/Publisher'
          description: The organisation which publishes the publication.
        informatieCategorieen:
          type: array
          items:
            $ref: '#/components/schemas/InformatieCategorie'
          description: The information categories clarify the kind of information
            present in the publication.
        officieleTitel:
          type: string
          maxLength: 255
        verkorteTitel:
          type: string
          default: ''
          maxLength: 255
        omschrijving:
          type: string
          default: ''
        registratiedatum:
          type: string
          format: date-time
          description: System timestamp reflecting when the publication was registered
            in the GPP-Publicatiebank.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          description: System timestamp reflecting when the publication was last modified
            in the GPP-Publicatiebank.
      required:
      - informatieCategorieen
      - laatstGewijzigdDatum
      - officieleTitel
      - publisher
      - registratiedatum
      - uuid
    PublicationPolymorphic:
      type: object
      properties:
        record:
          allOf:
          - $ref: '#/components/schemas/Publication'
          readOnly: true
      required:
      - record
    Publisher:
      type: object
      properties:
        uuid:
          type: string
        naam:
          type: string
          maxLength: 255
      required:
      - naam
      - uuid
    ResultTypeEnum:
      enum:
      - '*'
      - publication
      - document
      type: string
      description: |-
        * `*` - Alle
        * `publication` - Publication
        * `document` - Document
    Search:
      type: object
      properties:
        query:
          type: string
          description: |-
            Filtering records based on the provided search term. This search query is applied to the data within the following fields (with priority based on the order below):

            - `identifier` **field only present in Document*
            - `officieleTitel`
            - `verkorteTitel`
            - `omschrijving`
        page:
          type: integer
          default: 1
          description: A page number within the paginated result set.
        pageSize:
          type: integer
          default: 10
          description: Number of results to return per page.
        sort:
          allOf:
          - $ref: '#/components/schemas/SortEnum'
          default: relevance
        resultType:
          allOf:
          - $ref: '#/components/schemas/ResultTypeEnum'
          default: '*'
          description: |-
            Which table(s) should be present in the returning body.

            * `*` - Alle
            * `publication` - Publication
            * `document` - Document
        registratiedatumVanaf:
          type: string
          format: date-time
          description: Filter records that were registered after or on the given value.
        registratiedatumTot:
          type: string
          format: date-time
          description: Filter records that were registered before the given value.
        laatstGewijzigdDatumVanaf:
          type: string
          format: date-time
          description: Filter records that were last modified after or on the given
            value.
        laatstGewijzigdDatumTot:
          type: string
          format: date-time
          description: Filter records that were last modified before the given value.
        creatiedatumVanaf:
          type: string
          format: date
          description: Filter documents that were created after or on the given value.
        creatiedatumTot:
          type: string
          format: date
          description: Filter documents that were created before the given value.
    SearchResponse:
      type: object
      properties:
        count:
          type: integer
        next:
          type: boolean
          default: false
        previous:
          type: boolean
          default: false
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResponseResults'
      required:
      - count
      - results
    SearchResponseResults:
      oneOf:
      - $ref: '#/components/schemas/SearchResponseResultsDocumentPolymorphic'
      - $ref: '#/components/schemas/SearchResponseResultsPublicationPolymorphic'
      discriminator:
        propertyName: type
        mapping:
          document: '#/components/schemas/SearchResponseResultsDocumentPolymorphic'
          publication: '#/components/schemas/SearchResponseResultsPublicationPolymorphic'
    SearchResponseResultsDocumentPolymorphic:
      allOf:
      - $ref: '#/components/schemas/SearchResponseResultsShared'
      - $ref: '#/components/schemas/DocumentPolymorphic'
    SearchResponseResultsPublicationPolymorphic:
      allOf:
      - $ref: '#/components/schemas/SearchResponseResultsShared'
      - $ref: '#/components/schemas/PublicationPolymorphic'
    SearchResponseResultsShared:
      type: object
      description: |-
        Polymorphic serializer base class.

        Note that the discriminator field must exist at the same depth as the mapped
        serializer fields for the OpenAPI introspection. See
        https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ for
        more information. As such, it's not possible to define something like:

        {
            "object_type": "foo",
            "polymorphic_context": {
                <foo-specific fields>
            }
        }

        without explicitly wrapping this in a parent serializer, i.e. -
        ``polymorphic_context`` can not be a PolymorphicSerializer itself, as it requires
        access to the ``object_type`` in the parent scope.
      properties:
        type:
          type: string
      required:
      - type
    SortEnum:
      enum:
      - relevance
      - chronological
      type: string
      description: |-
        * `relevance` - Relevance
        * `chronological` - Chronological
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
externalDocs:
  description: Functional and technical documentation
  url: https://gpp-zoeken.readthedocs.io/
